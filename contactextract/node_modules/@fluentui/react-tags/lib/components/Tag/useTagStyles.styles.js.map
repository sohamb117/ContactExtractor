{"version":3,"names":["__resetStyles","__styles","mergeClasses","shorthands","tokens","typographyStyles","createCustomFocusIndicatorStyle","tagClassNames","root","media","icon","primaryText","secondaryText","dismissIcon","tagSpacingMedium","tagSpacingSmall","tagSpacingExtraSmall","mediumIconSize","smallIconSize","extraSmallIconSize","baseStyles","fontFamily","padding","appearance","textAlign","display","alignItems","gridTemplateAreas","boxSizing","width","border","strokeWidthThin","colorTransparentStroke","useRootRoundedBaseClassName","r","s","useRootCircularBaseClassName","useRootStyles","filled","De3pzq","sj55zd","outline","g2u3we","h3c5rm","B9xav0g","zhjwy3","brand","medium","Bqenvij","small","d","useRootDisabledStyles","Bceei9c","useRootWithoutMediaStyles","uwmqm3","useRootWithoutDismissStyles","z189sj","useIconStyles","base","Bw0ie65","Br312pm","nk6f5a","Ijaq50","Bq1tomu","mc9l5x","B7ck84d","a9b677","Be2twd7","p","useMediaStyles","useDismissIconStyles","ze5xyy","oy3o9n","eoavqd","Bi91k9c","lj723h","m","h","a","usePrimaryTextStyles","Huce71","Bahqtrf","Bhrd7zp","Bg96gwp","withoutSecondaryText","Byoj8tv","withSecondaryText","B6of3ja","useSecondaryTextBaseClassName","useTagStyles_unstable","state","rootRoundedBaseClassName","rootCircularBaseClassName","rootStyles","rootDisabledStyles","rootWithoutMediaStyles","rootWithoutDismissStyles","iconStyles","mediaStyles","dismissIconStyles","primaryTextStyles","secondaryTextBaseClassName","shape","size","className","disabled"],"sources":["useTagStyles.styles.js"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport { createCustomFocusIndicatorStyle } from '@fluentui/react-tabster';\nexport const tagClassNames = {\n    root: 'fui-Tag',\n    media: 'fui-Tag__media',\n    icon: 'fui-Tag__icon',\n    primaryText: 'fui-Tag__primaryText',\n    secondaryText: 'fui-Tag__secondaryText',\n    dismissIcon: 'fui-Tag__dismissIcon'\n};\n/**\n * Inner horizontal space left and right of Tag\n */ const tagSpacingMedium = '7px';\nconst tagSpacingSmall = '5px';\nconst tagSpacingExtraSmall = '5px';\nconst mediumIconSize = '20px';\nconst smallIconSize = '16px';\nconst extraSmallIconSize = '12px';\nconst baseStyles = {\n    // reset default button style:\n    fontFamily: 'inherit',\n    padding: '0px',\n    appearance: 'button',\n    textAlign: 'unset',\n    display: 'inline-grid',\n    alignItems: 'center',\n    gridTemplateAreas: `\n  \"media primary   dismissIcon\"\n  \"media secondary dismissIcon\"\n  `,\n    boxSizing: 'border-box',\n    width: 'fit-content',\n    border: `${tokens.strokeWidthThin} solid ${tokens.colorTransparentStroke}`\n};\nconst useRootRoundedBaseClassName = makeResetStyles({\n    ...baseStyles,\n    borderRadius: tokens.borderRadiusMedium,\n    ...createCustomFocusIndicatorStyle({\n        borderRadius: tokens.borderRadiusMedium,\n        outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`\n    }),\n    /**\n   * Pseudo element to draw the border for windows high contrast mode -\n   * when Tag is with secondary text, primary text has negative margin that covers the border.\n   */ '@media (forced-colors: active)': {\n        position: 'relative',\n        '::before': {\n            content: '\"\"',\n            borderTop: `${tokens.strokeWidthThin} solid`,\n            position: 'absolute',\n            top: '-1px',\n            left: '-1px',\n            right: '-1px',\n            bottom: '-1px',\n            borderTopLeftRadius: tokens.borderRadiusMedium,\n            borderTopRightRadius: tokens.borderRadiusMedium\n        }\n    }\n});\nconst useRootCircularBaseClassName = makeResetStyles({\n    ...baseStyles,\n    borderRadius: tokens.borderRadiusCircular,\n    ...createCustomFocusIndicatorStyle({\n        borderRadius: tokens.borderRadiusCircular,\n        outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`\n    }),\n    /**\n   * Pseudo element to draw the border for windows high contrast mode -\n   * when Tag is with secondary text, primary text has negative margin that covers the border.\n   */ '@media (forced-colors: active)': {\n        position: 'relative',\n        '::before': {\n            content: '\"\"',\n            borderTop: `${tokens.strokeWidthThin} solid`,\n            borderLeft: `${tokens.strokeWidthThin} solid`,\n            borderRight: `${tokens.strokeWidthThin} solid`,\n            position: 'absolute',\n            top: '-1px',\n            left: '-1px',\n            right: '-1px',\n            bottom: '-1px',\n            borderRadius: tokens.borderRadiusCircular\n        }\n    }\n});\nconst useRootStyles = makeStyles({\n    filled: {\n        backgroundColor: tokens.colorNeutralBackground3,\n        color: tokens.colorNeutralForeground2\n    },\n    outline: {\n        backgroundColor: tokens.colorSubtleBackground,\n        color: tokens.colorNeutralForeground2,\n        ...shorthands.borderColor(tokens.colorNeutralStroke1)\n    },\n    brand: {\n        backgroundColor: tokens.colorBrandBackground2,\n        color: tokens.colorBrandForeground2\n    },\n    medium: {\n        height: '32px'\n    },\n    small: {\n        height: '24px'\n    },\n    'extra-small': {\n        height: '20px'\n    }\n});\nconst useRootDisabledStyles = makeStyles({\n    filled: {\n        cursor: 'not-allowed',\n        backgroundColor: tokens.colorNeutralBackgroundDisabled,\n        color: tokens.colorNeutralForegroundDisabled,\n        ...shorthands.borderColor(tokens.colorTransparentStrokeDisabled)\n    },\n    outline: {\n        cursor: 'not-allowed',\n        backgroundColor: tokens.colorSubtleBackground,\n        color: tokens.colorNeutralForegroundDisabled,\n        ...shorthands.borderColor(tokens.colorNeutralStrokeDisabled)\n    },\n    brand: {\n        cursor: 'not-allowed',\n        backgroundColor: tokens.colorNeutralBackgroundDisabled,\n        color: tokens.colorNeutralForegroundDisabled,\n        ...shorthands.borderColor(tokens.colorTransparentStrokeDisabled)\n    }\n});\n/**\n * Styles for root slot when Tag is without leading media/icon\n */ const useRootWithoutMediaStyles = makeStyles({\n    medium: {\n        paddingLeft: tagSpacingMedium\n    },\n    small: {\n        paddingLeft: tagSpacingSmall\n    },\n    'extra-small': {\n        paddingLeft: tagSpacingExtraSmall\n    }\n});\n/**\n * Styles for root slot when Tag is without dismiss icon\n */ const useRootWithoutDismissStyles = makeStyles({\n    medium: {\n        paddingRight: tagSpacingMedium\n    },\n    small: {\n        paddingRight: tagSpacingSmall\n    },\n    'extra-small': {\n        paddingRight: tagSpacingExtraSmall\n    }\n});\nexport const useIconStyles = makeStyles({\n    base: {\n        gridArea: 'media',\n        display: 'flex',\n        boxSizing: 'content-box'\n    },\n    medium: {\n        paddingLeft: tagSpacingMedium,\n        paddingRight: tokens.spacingHorizontalXS,\n        width: mediumIconSize,\n        fontSize: mediumIconSize\n    },\n    small: {\n        paddingLeft: tagSpacingSmall,\n        paddingRight: tokens.spacingHorizontalXXS,\n        width: smallIconSize,\n        fontSize: smallIconSize\n    },\n    'extra-small': {\n        paddingLeft: tagSpacingExtraSmall,\n        paddingRight: tokens.spacingHorizontalXXS,\n        width: extraSmallIconSize,\n        fontSize: extraSmallIconSize\n    }\n});\nexport const useMediaStyles = makeStyles({\n    base: {\n        gridArea: 'media',\n        display: 'flex',\n        paddingLeft: '1px'\n    },\n    medium: {\n        paddingRight: tokens.spacingHorizontalS\n    },\n    small: {\n        paddingRight: tokens.spacingHorizontalSNudge\n    },\n    'extra-small': {\n        paddingRight: tokens.spacingHorizontalSNudge\n    }\n});\nconst useDismissIconStyles = makeStyles({\n    base: {\n        gridArea: 'dismissIcon',\n        display: 'flex',\n        // windows high contrast:\n        '@media (forced-colors: active)': {\n            ':hover': {\n                color: 'Highlight'\n            },\n            ':active': {\n                color: 'Highlight'\n            }\n        }\n    },\n    medium: {\n        paddingLeft: tokens.spacingHorizontalXS,\n        paddingRight: tagSpacingMedium,\n        fontSize: mediumIconSize\n    },\n    small: {\n        paddingLeft: tokens.spacingHorizontalXXS,\n        paddingRight: tagSpacingSmall,\n        fontSize: smallIconSize\n    },\n    'extra-small': {\n        paddingLeft: tokens.spacingHorizontalXXS,\n        paddingRight: tagSpacingExtraSmall,\n        fontSize: extraSmallIconSize\n    },\n    filled: {\n        ':hover': {\n            cursor: 'pointer',\n            color: tokens.colorCompoundBrandForeground1Hover\n        },\n        ':active': {\n            color: tokens.colorCompoundBrandForeground1Pressed\n        }\n    },\n    outline: {\n        ':hover': {\n            cursor: 'pointer',\n            color: tokens.colorCompoundBrandForeground1Hover\n        },\n        ':active': {\n            color: tokens.colorCompoundBrandForeground1Pressed\n        }\n    },\n    brand: {\n        ':hover': {\n            cursor: 'pointer',\n            color: tokens.colorCompoundBrandForeground1Hover\n        },\n        ':active': {\n            color: tokens.colorCompoundBrandForeground1Pressed\n        }\n    }\n});\nexport const usePrimaryTextStyles = makeStyles({\n    base: {\n        whiteSpace: 'nowrap',\n        paddingLeft: tokens.spacingHorizontalXXS,\n        paddingRight: tokens.spacingHorizontalXXS\n    },\n    medium: {\n        ...typographyStyles.body1\n    },\n    small: {\n        ...typographyStyles.caption1\n    },\n    'extra-small': {\n        ...typographyStyles.caption1\n    },\n    withoutSecondaryText: {\n        gridColumnStart: 'primary',\n        gridRowStart: 'primary',\n        gridRowEnd: 'secondary',\n        paddingBottom: tokens.spacingHorizontalXXS\n    },\n    withSecondaryText: {\n        gridArea: 'primary',\n        ...typographyStyles.caption1,\n        marginTop: '-2px'\n    }\n});\nexport const useSecondaryTextBaseClassName = makeResetStyles({\n    gridArea: 'secondary',\n    paddingLeft: tokens.spacingHorizontalXXS,\n    paddingRight: tokens.spacingHorizontalXXS,\n    ...typographyStyles.caption2,\n    whiteSpace: 'nowrap'\n});\n/**\n * Apply styling to the Tag slots based on the state\n */ export const useTagStyles_unstable = (state)=>{\n    'use no memo';\n    const rootRoundedBaseClassName = useRootRoundedBaseClassName();\n    const rootCircularBaseClassName = useRootCircularBaseClassName();\n    const rootStyles = useRootStyles();\n    const rootDisabledStyles = useRootDisabledStyles();\n    const rootWithoutMediaStyles = useRootWithoutMediaStyles();\n    const rootWithoutDismissStyles = useRootWithoutDismissStyles();\n    const iconStyles = useIconStyles();\n    const mediaStyles = useMediaStyles();\n    const dismissIconStyles = useDismissIconStyles();\n    const primaryTextStyles = usePrimaryTextStyles();\n    const secondaryTextBaseClassName = useSecondaryTextBaseClassName();\n    const { shape, size, appearance } = state;\n    state.root.className = mergeClasses(tagClassNames.root, shape === 'rounded' ? rootRoundedBaseClassName : rootCircularBaseClassName, state.disabled ? rootDisabledStyles[appearance] : rootStyles[appearance], rootStyles[size], !state.media && !state.icon && rootWithoutMediaStyles[size], !state.dismissIcon && rootWithoutDismissStyles[size], state.root.className);\n    if (state.media) {\n        state.media.className = mergeClasses(tagClassNames.media, mediaStyles.base, mediaStyles[size], state.media.className);\n    }\n    if (state.icon) {\n        state.icon.className = mergeClasses(tagClassNames.icon, iconStyles.base, iconStyles[size], state.icon.className);\n    }\n    if (state.primaryText) {\n        state.primaryText.className = mergeClasses(tagClassNames.primaryText, primaryTextStyles.base, primaryTextStyles[size], state.secondaryText ? primaryTextStyles.withSecondaryText : primaryTextStyles.withoutSecondaryText, state.primaryText.className);\n    }\n    if (state.secondaryText) {\n        state.secondaryText.className = mergeClasses(tagClassNames.secondaryText, secondaryTextBaseClassName, state.secondaryText.className);\n    }\n    if (state.dismissIcon) {\n        state.dismissIcon.className = mergeClasses(tagClassNames.dismissIcon, dismissIconStyles.base, dismissIconStyles[size], !state.disabled && dismissIconStyles[appearance], state.dismissIcon.className);\n    }\n    return state;\n};\n"],"mappings":"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","ignoreList":[]}